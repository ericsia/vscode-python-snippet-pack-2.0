{
    "for": {
        "prefix": "for-",
        "body": "for ${1:value} in ${2:iterable}:\n\t# comment: ${3:}\n# END FOR$0",
        "description": "Code snippet to create a for loop structure."
    },
    "for-in enumerate()": {
        "prefix": "for-InEnumerate()",
        "body": "for ${1:i}, ${2:itemIter} in enumerate(${3:iterable}):  # looping through row\n\t# comment: ${4:}\n# END FOR$0",
        "description": "for loop accessing index and element using enumerate"
    },
    "for-range(Amount)": {
        "prefix": "for-(Amount)",
        "body": "for ${1:value} in range(${2:total}):\n\t# comment: ${3:}\n# END FOR$0",
        "description": "value = 0,1,2 [for value in range(3)]"
    },
    "for-range(Begin, ExclusiveEnd)": {
        "prefix": "for-(Begin, End)",
        "body": "for ${1:value} in range(${2:Start}, ${3:ExclusiveEnd}):\n\t# comment: ${4:}\n# END FOR$0",
        "description": "value = 1,2 [for value in range(1, 3)]"
    },
    "for-range(Begin, ExclusiveEnd, IncrementBy)": {
        "prefix": "for-IncrementBy()",
        "body": "for ${1:value} in range(${2:Start}, ${3:ExclusiveEnd}, ${4:Step}):\n\t# comment: ${5:}\n# END FOR$0",
        "description": "value = 3,2,1 [for value in range(3, 0, -1)]"
    },
    "for=>list": {
        "prefix": "for=>list",
        "body": [
            "fruits = ['apple', 'banana', 'cherry']",
            "for x in fruits:",
            "\tprint(x)"
        ],
        "description": "An example for using for"
    },
    "for=>through_a_string": {
        "prefix": "for=>through_a_string",
        "body": [
            "for x in 'banana':",
            "\tprint(x)"
        ],
        "description": "An example for using for"
    },
    "for=>break_statement": {
        "prefix": "for=>break_statement",
        "body": [
            "fruits = ['apple', 'banana', 'cherry']",
            "for x in fruits:\n\tprint(x)\n\tif x == 'banana':",
            "\t\tbreak"
        ],
        "description": "An example for using for"
    },
    "for=>continue_statement": {
        "prefix": "for=>continue_statement",
        "body": [
            "fruits = ['apple', 'banana', 'cherry']",
            "for x in fruits:\n\tprint(x)\n\tif x == 'banana':",
            "\tcontinue\n\tprint(x)"
        ],
        "description": "An example for using for"
    },
    "for=>range_function1": {
        "prefix": "for=>range_function1",
        "body": [
            "for x in range(6):\n\tprint(x)"
        ],
        "description": "An example for using for"
    },
    "for=>range_function2": {
        "prefix": "for=>range_function2",
        "body": [
            "for x in range(2, 6):\n\tprint(x)"
        ],
        "description": "An example for using for"
    },
    "for=>range_function3": {
        "prefix": "for=>range_function3",
        "body": [
            "for x in range(2, 30, 3):\n\tprint(x)"
        ],
        "description": "An example for using for"
    },
    "for=>for_else": {
        "prefix": "for=>for_else",
        "body": [
            "for x in range(2, 6):\n\tprint(x)",
            "else:\n\tprint('Finally finished!')"
        ],
        "description": "An example for using for"
    },
    "for=>nested_loops": {
        "prefix": "for=>nested_loops",
        "body": [
            "adj = ['red', 'big', 'tasty']",
            "fruits = ['apple', 'banana', 'cherry']",
            "for x in adj:",
            "\tfor y in fruits:",
            "\t\tprint(x, y)"
        ],
        "description": "An example for using for"
    },
    "while": {
        "prefix": "while-",
        "body": "while (${1:}):\n\t# comment: ${2:}\n# END WHILE$0",
        "description": "Code snippet to create a while loop structure."
    },
    "while-else": {
        "prefix": "while-else",
        "body": "while (${1:}):\n\t# comment: ${2:}\nelse:\n\t# comment: ${3:}\n# END WHILE$0",
        "description": "while statement"
    },
    "while(i < 6)": {
        "prefix": "while(i < 6)",
        "body": "${1:i} = ${2:1}\nwhile ${1:i} < ${3:6}:\n\t# comment: ${4:}\n\t${5:print(${1:i})}\n\t${1:i} += ${6:1}\n# END WHILE$0",
        "description": "while statement"
    },
    "while(notFinished)": {
        "prefix": "while(notFinished)",
        "body": "${1:notFinished} = ${2:True}\nwhile ${1:notFinished}:\n\t# comment: ${3:}\n\tif (${4:input(\"Finished? y/n : \") == \"y\"}):\n\t\t${1:notFinished} = ${5:False}\n\t# END IF\n# END WHILE$0",
        "description": "while statement"
    },
    "while=>break_statement": {
        "prefix": "while=>break_statement",
        "body": [
            "i = 1",
            "while i < 6:\n\tprint(i)",
            "\tif i == 3:",
            "\t\tbreak",
            "\ti += 1"
        ],
        "description": "while statement"
    },
    "while=>continue_statement": {
        "prefix": "while=>continue_statement",
        "body": [
            "i = 1",
            "while i < 6:",
            "\ti += 1",
            "\tprint(i)",
            "\tif i == 3:",
            "\t\tcontinue",
            "\tprint(i)"
        ],
        "description": "while statement"
    }
}